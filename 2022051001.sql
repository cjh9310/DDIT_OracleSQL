2022-05-10)
<학습 목표>
1. procedure
2. Function  
3. exception
/
SELECT TO_DATE('20220501','YYYYMMDD')+(ROWNUM-1) AS  CAL
  FROM DUAL
CONNECT BY LEVEL <= (TO_DATE('20220531','YYYYMMDD')
                    - TO_DATE('20220501','YYYYMMDD')+1);
/
-- 상품코드와 월을 입력하면 해당 월에 대한 해당 상품의 입고, 출고를 처리해 화면에 출력해보자
-- (프로시저명 : USP_PRO_INFO, 월 형식은 YYYYMM이라 가정, 입고 및 출고는 OUT 매개변수로 처리



-- 1) 월에대한정보(1~12)
-- CONNECT BY LEVEL <=? 와 같이 사용한다면 1부터 ?까지 LEVEL의 값이 증가하게 된다.
/
CREATE OR REPLACE PROCEDURE USP_PRO_INFO
    (P_WOL IN VARCHAR2, P_PROD_ID IN VARCHAR2,  -- P_WOL(월),P_PROD_ID(상품코드)
     P_IN_AMT OUT NUMBER, P_OUT_AMT OUT NUMBER)
IS
BEGIN
SELECT I.IN_AMT , J.OUT_AMT INTO P_IN_AMT , P_OUT_AMT
FROM
(
    SELECT LEVEL WOL FROM   DUAL
    CONNECT BY  LEVEL + 1 <= 13
) H,
(
    --2) 월별입고정보
    SELECT EXTRACT(MONTH FROM BP.BUY_DATE) WOL
         , SUM(BP.BUY_QTY) IN_AMT
    FROM   PROD P, BUYPROD BP
    WHERE  P.PROD_ID = BP.BUY_PROD
    AND    TO_CHAR(BP.BUY_DATE,'YYYYMM') = P_WOL
    AND    P.PROD_ID = P_PROD_ID
    GROUP BY EXTRACT(MONTH FROM BP.BUY_DATE)
) I,
(
    --3) 월별출고정보
    SELECT TO_NUMBER(SUBSTR(C.CART_NO,5,2)) WOL
         , SUM(C.CART_QTY) OUT_AMT
    FROM   PROD P, CART C
    WHERE  P.PROD_ID = C.CART_PROD
    AND    C.CART_NO LIKE P_WOL || '%'
	AND    P.PROD_ID = P_PROD_ID
    GROUP BY TO_NUMBER(SUBSTR(C.CART_NO,5,2))
) J
WHERE H.WOL = I.WOL(+)
AND   H.WOL = J.WOL(+)
AND   H.WOL = TO_NUMBER(SUBSTR(P_WOL,-2)); --오른쪽에서 두 글자 추출
END;
/

VAR P_IN_AMT VARCHAR2
VAR P_OUT_AMT VARCHAR2
EXEC USP_PRO_INFO('202004','P10100001', : P_IN_AMT, : P_OUT_AMT)
PRINT P_IN_AMT
PRINT P_OUT_AMT;
/

-- 회원아이디를 받으면 해당 이름을 리턴하는 함수 만들기
/
SET SERVEROUT ON;
/
CREATE OR REPLACE FUNCTION FN_GETNAME(P_MEM_ID IN VARCHAR2)
    RETURN VARCHAR2
IS
    V_NAME VARCHAR2(30);
BEGIN
    SELECT MEM_NAME INTO V_NAME
      FROM MEMBER
     WHERE MEM_ID = P_MEM_ID;
    
    RETURN V_NAME;
END;
/
SELECT FN_GETNAME('b001') FROM DUAL;
/
-- 년도 및 상품코드를 입력 받으면 해당년도의 평균 판매 회수를 반환하는 함수
/
SELECT EXTRACT(YEAR FROM SYSDATE) FROM DYAL;
CREATE OR REPLACE FUNCTION FN_PROAVGQTY
(P_YEAR IN NUMBER DEFAULT(EXTRACT(YEAR FROM SYSDATE)),
P_PROD_ID IN VARCHAR2)
    RETURN NUMBER
IS
    V_QTY NUMBER;
BEGIN
    SELECT NVL(ROUND(AVG(CART_QTY),2),0) INTO V_QTY
      FROM CART
     WHERE CART_PROD = P_PROD_ID
       AND CART_NO LIKE P_YEAR||'%';
       
       RETURN V_QTY;
END;
/
VAR QTY NUMBER
EXEC :QTY := FN_PROAVGQTY(2020,'P101000001')
PRINT QTY;
/
SELECT PROD_ID, PROD_NAME, 
       FN_PROAVGQTY(2020, PROD_ID) AVG_QTY_2020,
       FN_PROAVGQTY(2021, PROD_ID) AVG_QTY_2021
       
FROM PROD;
/
-- 함수 문제
-- 다음과 같이 출력해보자
-- 상품코드, 상품명, 대분류코드, 대분류명
-- 단, 함수를 생성하여 대분류명을 처리해보자
-- 함수명은 FN_PRODNM

/
CREATE OR REPLACE FUNCTION FN_PRODNM(P_PROD_LGU IN VARCHAR2)
    RETURN VARCHAR2
IS
    V_NM VARCHAR2(100);
BEGIN
    SELECT LPROD_NM INTO V_NM
      FROM LPROD
     WHERE LPROD_GU = P_PROD_LGU;
     RETURN V_NM;
END;
/     
    SELECT PROD_ID,
           PROD_NAME,
           PROD_LGU,
           FN_PRODNM(PROD_LGU) NM
      FROM PROD;



